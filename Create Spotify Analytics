# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 
#First I determined the Top 10 tracks by popularity
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10

#Then I sorted the data to determine the loudest tracks.
SELECT artist_name, track_name, MAX(loudness)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY loudness desc

#Last I filtered the data to show the top 10 songs with the largest duration.
SELECT track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY duration_ms desc
LIMIT 10

-- Just based on this simple query I could determine that spotify users prefer songs that are loud and long-lasting. 
For example Bad Habits by Ed Sheeran shows up in all three tables.
